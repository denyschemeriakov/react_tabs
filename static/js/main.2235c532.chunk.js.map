{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","className","map","tab","href","onClick","event","preventDefault","id","classNames","active","title","find","content","App","state","selectedTab","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mOAUaA,EAAwB,SAACC,GAAW,IAAD,EACtCC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAE7B,OACE,qCACE,oBAAIC,UAAU,oBAAd,SACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,6BACE,mBACEC,KAAK,SACLC,QAAS,SAACC,GACRA,EAAMC,iBACFR,IAAkBI,EAAIK,IACxBR,EAAcG,IAGlBF,UAAWQ,IAAW,WAAY,CAChCC,OAAQP,EAAIK,KAAOT,IATvB,SAYGI,EAAIQ,SAbAR,EAAIK,SAkBjB,mBAAGP,UAAU,OAAb,mBACGH,EAAKc,MAAK,SAAAT,GAAG,OAAIA,EAAIK,KAAOT,YAD/B,aACG,EAA4Cc,cC9B/Cf,G,MAAc,CAClB,CAAEU,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,eACxC,CAAEL,GAAI,QAASG,MAAO,QAASE,QAAS,iBAOpCC,E,4MACJC,MAAe,CACbC,YAAalB,EAAK,I,EAGpBE,cAAgB,SAACG,GACf,EAAKc,SAAS,CAAED,YAAab,K,4CAG/B,WACE,IAAQa,EAAgBE,KAAKH,MAArBC,YAER,OACE,sBAAKf,UAAU,2CAAf,UACE,oBAAIA,UAAU,YAAd,mCACsBe,EAAYL,SAElC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeiB,EAAYR,GAC3BR,cAAekB,KAAKlB,uB,GApBZmB,IAAMC,WA2BTN,ICxCfO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2235c532.chunk.js","sourcesContent":["import React from 'react';\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport classNames from 'classnames';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const { tabs, selectedTabId, onTabSelected } = props;\n\n  return (\n    <>\n      <ul className=\"nav nav-tabs mt-3\">\n        {tabs.map(tab => (\n          <li key={tab.id}>\n            <a\n              href=\"tab.id\"\n              onClick={(event) => {\n                event.preventDefault();\n                if (selectedTabId !== tab.id) {\n                  onTabSelected(tab);\n                }\n              }}\n              className={classNames('nav-link', {\n                active: tab.id === selectedTabId,\n              })}\n            >\n              {tab.title}\n            </a>\n          </li>\n        ))}\n      </ul>\n      <p className=\"mt-5\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </p>\n    </>\n  );\n};\n","import React from 'react';\nimport { Tabs } from './components/Tabs/Tabs';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  selectedTab: Tab;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedTab: tabs[0],\n  };\n\n  onTabSelected = (tab: Tab) => {\n    this.setState({ selectedTab: tab });\n  };\n\n  render() {\n    const { selectedTab } = this.state;\n\n    return (\n      <div className=\"App w-50 mx-auto mt-5 border p-5 rounded\">\n        <h1 className=\"display-4\">\n          {`Selected tab is ${selectedTab.title}`}\n        </h1>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab.id}\n          onTabSelected={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}